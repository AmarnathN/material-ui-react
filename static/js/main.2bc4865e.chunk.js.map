{"version":3,"sources":["components/Header.js","components/Sidemenu.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","components/controls/Button.js","components/controlsHandlers/useForm.js","components/controls/PopupDialog.js","components/controls/ActionIconButton.js","components/controls/Notification.js","components/controls/ConfirmDialog.js","components/controls/MyControls.js","services/employeeService.js","pages/employee/EmployeeForm.js","components/PageHeader.js","components/controlsHandlers/useTable.js","pages/employee/Employees.js","App/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","backgroundColor","palette","primary","transform","searchInput","opacity","padding","spacing","fontSize","border","color","background","light","paddingRight","Header","classes","AppBar","position","className","Toolbar","Grid","container","alignItems","item","InputBase","placeholder","startAdornment","Search","sm","IconButton","Badge","badgeContent","NotificationsNone","ChatBubble","ExitToApp","sideMenu","display","flexDirection","left","width","height","Sidemenu","props","Input","name","value","label","errorText","onChange","other","TextField","variant","error","helperText","RadioGroup","items","FormControl","FormLabel","row","length","map","index","FormControlLabel","id","control","Radio","Select","options","InputLabel","MenuItem","option","title","FormHelperText","Checkbox","checked","e","target","convertToDefaultEventParam","DatePicker","utils","MomentUtils","inputVariant","format","date","margin","textTransform","shape","borderRadius","Button","text","size","onClick","dialogWrapper","top","PopupDialog","children","openPopup","handleClosePopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","Typography","component","flexGrow","MyControls","ActionIconButton","Close","Divider","DialogContent","minWidth","secondary","main","Notification","notify","setNotify","handleCloseAlert","event","reason","alertMessage","alertType","isOpen","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","dialogTitle","textAlign","dialogContent","dialogActions","justifyContent","titleIcon","cursor","Form","ConfirmDialog","confirmDialog","setConfirmDialog","disableRipple","NotListedLocation","subTitle","DialogActions","onConfirm","useForm","intialFieldValues","validateOnChange","validate","useState","values","setValues","errors","setErrors","handleInputChange","resetForm","KEYS","addEmployee","data","employees","getAllEmployees","generateEmployeeId","push","localStorage","setItem","JSON","stringify","updateEmployee","employeeRecordIndex","findIndex","x","getItem","Number","parseInt","toString","parse","emp","department","filter","dep","departmentId","genderItems","fullName","email","mobile","city","gender","hireDate","Date","isPermanent","EmployeeForm","addOrEditEmployees","setRecords","recordForEdit","fieldValues","temp","test","isNaN","Object","every","useEffect","keys","onSubmit","preventDefault","isUpdate","md","type","pageHeader","marginBotton","pageIcon","pageTitle","paddingLeft","PageHeader","description","icon","Paper","elevation","Card","table","marginTop","fontWeight","useTable","records","headers","filterFunction","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handlePageChange","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TableContainer","Table","TableHead","TableRow","header","TableCell","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TablePagination","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","recordsArray","comparator","stablizedArray","ele","sort","stableArraySort","fn","getComparator","slice","pageContent","HeadCells","Employees","setRecordForEdit","setFilterFunction","handleDeleteRecord","deleteEmployee","PeopleAltOutlined","xs","toLowerCase","includes","InputProps","InputAdornment","startIcon","Add","TableBody","record","openInpopup","Edit","Delete","employeeValues","createMuiTheme","default","overrides","MuiAppBar","MuiIconButton","appMain","dark","App","Fragment","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bc4865e.chunk.js","sourcesContent":["import { AppBar, Badge, Grid, IconButton, InputBase, makeStyles, Toolbar } from \"@material-ui/core\";\nimport {\n  ChatBubble as ChatBubbleIcon,\n  NotificationsNone as NotificationsNoneIcon,\n  ExitToApp as ExitToAppIcon,\n  Search,\n} from \"@material-ui/icons\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary,\n    transform: \"translateZ(-19.7rem)\",\n  },\n  searchInput: {\n    opacity: 0.6,\n    padding: `0px ${theme.spacing(1)}px`,\n    fontSize: \"0.8rem\",\n    border: \"1px solid #000\",\n    color: \"text.primary\",\n    backgroundColor: theme.palette.background.light,\n    \"&:hover\": {\n      backgroundColor: theme.palette.background.light,\n    },\n    \"& .MuiSvgIcon-root\": {\n      paddingRight: theme.spacing(1),\n    },\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar>\n        <Grid container alignItems={\"center\"}>\n          <Grid item>\n            <InputBase className={classes.searchInput} placeholder={\"search topics...\"} startAdornment={<Search />}></InputBase>\n          </Grid>\n          <Grid item sm></Grid>\n          <Grid item>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={3} color={\"secondary\"}>\n                <NotificationsNoneIcon></NotificationsNoneIcon>\n              </Badge>\n            </IconButton>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={2} color={\"secondary\"}>\n                <ChatBubbleIcon></ChatBubbleIcon>\n              </Badge>\n            </IconButton>\n            <IconButton color=\"inherit\">\n              <ExitToAppIcon></ExitToAppIcon>\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import { makeStyles, withStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  sideMenu: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"absolute\",\n    left: \"0px\",\n    width: \"10%\",\n    height: \"100%\",\n    backgroundColor: theme.palette.primary.light,\n  },\n}));\n// const styles = {\n//   sideMenu: {\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     position: \"absolute\",\n//     left: \"0px\",\n//     width: \"10%\",\n//     height: \"100%\",\n//     backgroundColor: ,\n//   },\n// };\n\nconst Sidemenu = (props) => {\n  const classes = useStyles();\n  return <div className={classes.sideMenu}></div>;\n  //   const { classes } = props;\n  //   return <div className={classes.sideMenu}></div>;\n};\n\n// export default withStyles(styles)(Sidemenu);\nexport default Sidemenu;\n","import { TextField } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Input = (props) => {\n  const { name, value, label, errorText = null, onChange, ...other } = props;\n  return (\n    <TextField\n      variant={\"outlined\"}\n      label={label}\n      value={value}\n      onChange={onChange}\n      name={name}\n      {...other}\n      {...(errorText && { error: true, helperText: errorText })}\n    />\n  );\n};\n\nexport default Input;\n","import { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup as MuiRadioGroup } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst RadioGroup = (props) => {\n  const { name, value, label, onChange, items } = props;\n  return (\n    <FormControl>\n      <FormLabel>{label}</FormLabel>\n      <MuiRadioGroup row={true} name={name} value={value} onChange={onChange}>\n        {items.length > 0 &&\n          items.map((item, index) => {\n            return <FormControlLabel key={index} value={item.id} control={<Radio />} label={item.label} />;\n          })}\n      </MuiRadioGroup>\n    </FormControl>\n  );\n};\n\nexport default RadioGroup;\n","import { FormControl, FormHelperText, FormLabel, InputLabel, MenuItem, Select as MuiSelect } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Select = (props) => {\n  const { name, value, label, errorText = null, onChange, options } = props;\n  return (\n    <FormControl variant=\"outlined\" {...(errorText && { error: true })}>\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect label={label} name={name} value={value} onChange={onChange}>\n        <MenuItem value=\"\">None</MenuItem>\n        {options.map((option) => {\n          return (\n            <MenuItem key={option.id} value={option.id}>\n              {option.title}\n            </MenuItem>\n          );\n        })}\n      </MuiSelect>\n      {errorText && <FormHelperText>{errorText}</FormHelperText>}\n    </FormControl>\n  );\n};\n\nexport default Select;\n","import { Checkbox as MuiCheckbox, FormControl, FormControlLabel } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Checkbox = (props) => {\n  const { name, value, label, onChange } = props;\n  const convertToDefaultEventParam = (name, value) => {\n    return {\n      target: { name, value },\n    };\n  };\n\n  return (\n    <FormControl>\n      <FormControlLabel\n        control={\n          <MuiCheckbox\n            name={name}\n            color={\"primary\"}\n            checked={value}\n            onChange={(e) => onChange(convertToDefaultEventParam(name, e.target.checked))}\n          />\n        }\n        label={label}\n      />\n    </FormControl>\n  );\n};\n\nexport default Checkbox;\n","import { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport React from \"react\";\n\nconst DatePicker = (props) => {\n  const { name, label, value, onChange } = props;\n  const convertToDefaultEventParam = (name, value) => {\n    return {\n      target: { name, value },\n    };\n  };\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <KeyboardDatePicker\n        variant=\"inline\"\n        inputVariant=\"outlined\"\n        label={label}\n        format=\"MMM/DD/yyyy\"\n        name={name}\n        value={value}\n        onChange={(date) => onChange(convertToDefaultEventParam(name, date))}\n      ></KeyboardDatePicker>\n    </MuiPickersUtilsProvider>\n  );\n};\n\nexport default DatePicker;\n","import { Button as MuiButton, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(0.5),\n  },\n  label: {\n    textTransform: \"none\",\n  },\n  shape: {\n    borderRadius: \"4px\",\n  },\n}));\nconst Button = (props) => {\n  const classes = useStyles();\n  const { text, size, color, variant, onClick, ...other } = props;\n  return (\n    <MuiButton\n      className={classes.shape}\n      classes={{ root: classes.root, label: classes.label }}\n      variant={variant || \"contained\"}\n      size={size || \"small\"}\n      color={color || \"primary\"}\n      onClick={onClick}\n      {...other}\n    >\n      {text}\n    </MuiButton>\n  );\n};\n\nexport default Button;\n","import { makeStyles } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiFormControl-root\": {\n      width: \"80%\",\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport const useForm = (intialFieldValues, validateOnChange = false, validate = () => {}) => {\n  const [values, setValues] = useState(intialFieldValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n    if (validateOnChange) {\n      validate({ [name]: value });\n    }\n  };\n\n  const resetForm = () => {\n    setValues(intialFieldValues);\n    setErrors({});\n  };\n  return { values, setValues, errors, setErrors, resetForm, handleInputChange };\n};\n\nexport const Form = (props) => {\n  const { children, ...other } = props;\n  const classes = useStyles();\n  return (\n    <form className={classes.root} {...other}>\n      {children}\n    </form>\n  );\n};\n","import { Dialog, DialogContent, DialogTitle, Divider, makeStyles, Typography } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { MyControls } from \"./MyControls\";\n\nconst useStyles = makeStyles((theme) => ({\n  dialogWrapper: {\n    padding: theme.spacing(2),\n    position: \"absolute\",\n    top: theme.spacing(5),\n  },\n}));\n\nconst PopupDialog = (props) => {\n  const classes = useStyles();\n  const { title, children, openPopup, setOpenPopup, handleClosePopup } = props;\n\n  return (\n    <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\n      <DialogTitle>\n        <div style={{ display: \"flex\" }}>\n          <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\n            {title}\n          </Typography>\n          <MyControls.ActionIconButton onClick={handleClosePopup}>\n            <Close />\n          </MyControls.ActionIconButton>\n        </div>\n      </DialogTitle>\n      <Divider />\n      <DialogContent>{children}</DialogContent>\n    </Dialog>\n  );\n};\n\nexport default PopupDialog;\n","import { Button, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 0,\n    margin: theme.spacing(0.5),\n  },\n  secondary: {\n    backgroundColor: theme.palette.background.main,\n    \"& .MuiButton-label\": {\n      color: theme.palette.secondary.main,\n    },\n  },\n  primary: {\n    backgroundColor: theme.palette.background.main,\n    \"& .MuiButton-label\": {\n      color: theme.palette.primary.main,\n    },\n  },\n  theme: {\n    backgroundColor: theme.palette.background,\n    \"& .MuiButton-label\": {\n      color: theme.palette.theme,\n    },\n  },\n}));\n\nconst ActionIconButton = (props) => {\n  const classes = useStyles();\n  const { color, children, onClick, variant, size, ...other } = props;\n  return (\n    <Button\n      className={`${classes.root} ${classes[color] || \"theme\"}`}\n      onClick={onClick}\n      variant={variant || \"outlined\"}\n      size={size || \"small\"}\n      {...other}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default ActionIconButton;\n","import { makeStyles, Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    top: theme.spacing(10),\n  },\n}));\nconst Notification = (props) => {\n  const classes = useStyles();\n\n  const { notify, setNotify } = props;\n  const handleCloseAlert = (event, reason) => {\n    if (reason == \"clickaway\") {\n      return; //This  is to avoid closing snackbar when clicked on outside snackbar\n    }\n    setNotify({ alertMessage: \"\", alertType: \"\", isOpen: false });\n  };\n\n  return (\n    <Snackbar\n      className={classes.root}\n      open={notify.isOpen}\n      autoHideDuration={3000}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      onClose={handleCloseAlert}\n    >\n      <Alert severity={notify.alertType} onClose={handleCloseAlert}>\n        {notify.alertMessage}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default Notification;\n","import { Dialog, DialogActions, DialogContent, DialogTitle, IconButton, makeStyles, Typography } from \"@material-ui/core\";\nimport { NotListedLocation } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { MyControls } from \"./MyControls\";\n\nconst useStyles = makeStyles((theme) => ({\n  dialogWrapper: {\n    padding: theme.spacing(2),\n    position: \"absolute\",\n    top: theme.spacing(5),\n  },\n  dialogTitle: {\n    textAlign: \"center\",\n  },\n  dialogContent: {\n    textAlign: \"center\",\n  },\n  dialogActions: {\n    justifyContent: \"center\",\n  },\n  titleIcon: {\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.secondary,\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      cursor: \"default\",\n    },\n    \"& .MuiSvgIcon-root\": {\n      fontSize: \"4rem\",\n    },\n  },\n}));\n\nconst ConfirmDialog = (props) => {\n  const classes = useStyles();\n  const { confirmDialog, setConfirmDialog } = props;\n  return (\n    <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialogWrapper }}>\n      <DialogTitle className={classes.dialogTitle}>\n        <IconButton disableRipple className={classes.titleIcon}>\n          <NotListedLocation></NotListedLocation>\n        </IconButton>\n      </DialogTitle>\n      <DialogContent className={classes.dialogContent}>\n        <Typography variant=\"h6\">{`${confirmDialog.title}?`}</Typography>\n        <Typography variant=\"subtitle2\">{`${confirmDialog.subTitle}`}</Typography>\n      </DialogContent>\n      <DialogActions className={classes.dialogActions}>\n        <MyControls.Button color=\"primary\" text={\"Yes\"} onClick={confirmDialog.onConfirm}></MyControls.Button>\n        <MyControls.Button\n          color=\"secondary\"\n          text={\"No\"}\n          onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })}\n        ></MyControls.Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmDialog;\n","import Input from \"../../components/controls/Input\";\nimport RadioGroup from \"../../components/controls/RadioGroup\";\nimport Select from \"../../components/controls/Select\";\nimport Checkbox from \"../../components/controls/Checkbox\";\nimport DatePicker from \"../../components/controls/DatePicker\";\nimport Button from \"../../components/controls/Button\";\nimport { useForm, Form } from \"../controlsHandlers/useForm\";\nimport PopupDialog from \"./PopupDialog\";\nimport ActionIconButton from \"./ActionIconButton\";\nimport Notification from \"./Notification\";\nimport ConfirmDialog from \"./ConfirmDialog\";\n\nexport const MyControls = {\n  ActionIconButton,\n  Button,\n  Input,\n  RadioGroup,\n  Form,\n  Select,\n  Checkbox,\n  DatePicker,\n  PopupDialog,\n  Notification,\n  ConfirmDialog,\n  useForm,\n};\n","export const KEYS = {\n  employees: \"employees\",\n  employeeId: \"employeeId\",\n};\n\nexport const getDepartments = () => {\n  return [\n    { id: \"1\", title: \"Engineering\" },\n    { id: \"2\", title: \"Marketing\" },\n    { id: \"3\", title: \"Sales\" },\n    { id: \"4\", title: \"HR\" },\n  ];\n};\n\nexport const addEmployee = (data) => {\n  let employees = getAllEmployees();\n  data[\"id\"] = generateEmployeeId();\n  employees.push(data);\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n};\n\nexport const updateEmployee = (data) => {\n  let employees = getAllEmployees();\n  let employeeRecordIndex = employees.findIndex((x) => x.id === data.id);\n  employees[employeeRecordIndex] = { ...data };\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n};\n\nconst generateEmployeeId = () => {\n  if (localStorage.getItem(KEYS.employeeId) == null) {\n    localStorage.setItem(KEYS.employeeId, \"0\");\n  }\n  var id = Number.parseInt(localStorage.getItem(KEYS.employeeId));\n  localStorage.setItem(KEYS.employeeId, (++id).toString());\n  return id;\n};\n\nexport const getAllEmployees = () => {\n  let employees = [];\n  if (localStorage.getItem(KEYS.employees)) {\n    employees = JSON.parse(localStorage.getItem(KEYS.employees));\n    return employees.map((emp) => ({ ...emp, department: getDepartments().filter((dep) => dep.id === emp.departmentId)[0].title }));\n  }\n  return employees;\n};\n\nexport const deleteEmployee = (id) => {\n  let employees = getAllEmployees();\n  employees = employees.filter((x) => x.id != id);\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n};\n","import { Grid } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { MyControls } from \"../../components/controls/MyControls\";\nimport { getDepartments } from \"../../services/employeeService\";\n\nconst genderItems = [\n  { id: \"male\", label: \"Male\" },\n  { id: \"female\", label: \"Female\" },\n  { id: \"other\", label: \"Other\" },\n];\n\nconst intialFieldValues = {\n  id: 0,\n  fullName: \"\",\n  email: \"\",\n  mobile: \"\",\n  city: \"\",\n  gender: \"male\",\n  departmentId: \"\",\n  hireDate: new Date(),\n  isPermanent: false,\n};\n\nconst EmployeeForm = (props) => {\n  const { addOrEditEmployees, setRecords, handleClosePopup, recordForEdit, setNotify } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    if (\"fullName\" in fieldValues) {\n      temp.fullName = fieldValues.fullName.length > 0 ? \"\" : \"This field is required\";\n    }\n    if (\"email\" in fieldValues) {\n      temp.email = /$^|.+@+..+/.test(fieldValues.email) ? \"\" : \"Valid Email is required\";\n    }\n    if (\"mobile\" in fieldValues) {\n      temp.mobile = isNaN(fieldValues.mobile) ? \"Valid Mobile Number is Required\" : \"\";\n      temp.mobile = temp.mobile != \"\" ? temp.mobile : fieldValues.mobile.length == 10 ? \"\" : \"Length is should be 10\";\n    }\n\n    if (\"city\" in fieldValues) {\n      temp.city = fieldValues.city ? \"\" : \"This field is required\";\n    }\n    if (\"departmentId\" in fieldValues) {\n      temp.departmentId = fieldValues.departmentId.length > 0 ? \"\" : \"This field is required\";\n    }\n    setErrors({\n      ...temp,\n    });\n    if (fieldValues === values) {\n      return Object.values(temp).every((x) => x == \"\");\n    }\n  };\n\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } = MyControls.useForm(intialFieldValues, true, validate);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate(values)) {\n      let isUpdate = Object.keys(recordForEdit).length != 0 ? true : false;\n      addOrEditEmployees(values, resetForm, isUpdate);\n      handleClosePopup();\n      setRecords();\n      setNotify({\n        isOpen: true,\n        alertMessage: isUpdate ? \"Updated Successfully\" : \"created succcessfully\",\n        alertType: \"success\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (Object.keys(recordForEdit).length > 0) {\n      setValues({ ...recordForEdit });\n    }\n  }, [recordForEdit]);\n\n  return (\n    <MyControls.Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item md={6} sm={12}>\n          <MyControls.Input\n            label=\"Full Name\"\n            value={values.fullName}\n            onChange={handleInputChange}\n            name=\"fullName\"\n            errorText={errors.fullName}\n          />\n          <MyControls.Input label=\"Email\" value={values.email} onChange={handleInputChange} name=\"email\" errorText={errors.email} />\n          <MyControls.Input label=\"Mobile\" value={values.mobile} onChange={handleInputChange} name=\"mobile\" errorText={errors.mobile} />\n          <MyControls.Input label=\"City\" value={values.city} onChange={handleInputChange} name=\"city\" errorText={errors.city} />\n        </Grid>\n        <Grid item md={6} sm={12}>\n          <MyControls.RadioGroup label={\"Gender\"} name=\"gender\" value={values.gender} onChange={handleInputChange} items={genderItems} />\n          <MyControls.Select\n            label=\"Department\"\n            name=\"departmentId\"\n            value={values.departmentId}\n            onChange={handleInputChange}\n            options={getDepartments()}\n            errorText={errors.departmentId}\n          />\n          <MyControls.Checkbox label=\"Permanent Employee\" name=\"isPermanent\" value={values.isPermanent} onChange={handleInputChange} />\n          <MyControls.DatePicker label=\"Hire Date\" name=\"hireDate\" value={values.hireDate} onChange={handleInputChange} />\n          <div>\n            <MyControls.Button color=\"primary\" size=\"medium\" text=\"Submit\" type=\"submit\" />\n            <MyControls.Button color=\"secondary\" size=\"medium\" text=\"Reset\" onClick={resetForm} />\n          </div>\n        </Grid>\n      </Grid>\n    </MyControls.Form>\n  );\n};\n\nexport default EmployeeForm;\n","import { Card, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#fdfdgf\",\n  },\n  pageHeader: {\n    padding: theme.spacing(4),\n    display: \"flex\",\n    marginBotton: theme.spacing(2),\n  },\n  pageIcon: {\n    display: \"inline-block\",\n    padding: theme.spacing(2),\n    color: theme.palette.primary,\n  },\n  pageTitle: {\n    paddingLeft: theme.spacing(4),\n    \"& .MuiTypography-subtitle2\": {\n      opacity: \"0.6\",\n    },\n  },\n}));\n\nconst PageHeader = (props) => {\n  const classes = useStyles();\n  const { title, description, icon } = props;\n  return (\n    <Paper elevation={4} className={classes.root}>\n      <div className={classes.pageHeader}>\n        <Card className={classes.pageIcon}>{icon}</Card>\n        <div className={classes.pageTitle}>\n          <Typography variant={\"h6\"} component={\"div\"}>\n            {title}\n          </Typography>\n          <Typography variant={\"subtitle2\"} component={\"div\"}>\n            {description}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nexport default PageHeader;\n","import {\n  makeStyles,\n  Table,\n  TableCell,\n  TableHead as MuiTableHead,\n  TablePagination as MuiTablePagination,\n  TableRow,\n  TableSortLabel,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    marginTop: theme.spacing(2),\n    \"& thead th\": {\n      fontWeight: \"600\",\n      color: theme.palette.primary.main,\n      backgroundColor: theme.palette.primary.light,\n    },\n    \"& tbody td\": {\n      fontWeight: \"300\",\n    },\n    \"& tbody tr:hover\": { cursor: \"pointer\", backgroundColor: theme.palette.theme.light },\n  },\n}));\n\nconst useTable = (records, headers, filterFunction) => {\n  const classes = useStyles();\n\n  const pages = [5, 10, 25];\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(pages[page]);\n  const [order, setOrder] = useState();\n  const [orderBy, setOrderBy] = useState();\n\n  const handleSortRequest = (cellId) => {\n    const isAsc = orderBy === cellId && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(cellId);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(Number.parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const stableArraySort = (recordsArray, comparator) => {\n    const stablizedArray = recordsArray.map((ele, index) => [ele, index]);\n    stablizedArray.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order != 0) return order;\n      return (a[1] = b[1]);\n    });\n    return stablizedArray.map((ele) => ele[0]);\n  };\n\n  const getComparator = (order, orderBy) => {\n    return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n  };\n\n  const descendingComparator = (a, b, orderBy) => {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  };\n  const recordsAfterPagingAndSorting = () => {\n    return stableArraySort(filterFunction.fn(records), getComparator(order, orderBy)).slice(page * rowsPerPage, (page + 1) * rowsPerPage);\n  };\n\n  const TableContainer = (props) => {\n    return <Table className={classes.table}>{props.children}</Table>;\n  };\n\n  const TableHead = (props) => {\n    return (\n      <MuiTableHead>\n        <TableRow>\n          {headers.map((header) => {\n            return (\n              <TableCell key={header.id} sortDirection={orderBy === header.id ? order : false}>\n                {header.disableSorting ? (\n                  header.label\n                ) : (\n                  <TableSortLabel\n                    active={orderBy === header.id}\n                    direction={orderBy === header.id ? order : \"asc\"}\n                    onClick={() => handleSortRequest(header.id)}\n                  >\n                    {header.label}\n                  </TableSortLabel>\n                )}\n              </TableCell>\n            );\n          })}\n        </TableRow>\n      </MuiTableHead>\n    );\n  };\n\n  const TablePagination = () => {\n    return (\n      <MuiTablePagination\n        component=\"div\"\n        count={records.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      ></MuiTablePagination>\n    );\n  };\n\n  return { TableContainer, TableHead, TablePagination, recordsAfterPagingAndSorting };\n};\n\nexport default useTable;\n","import React, { useState } from \"react\";\nimport EmployeeForm from \"./EmployeeForm\";\nimport { Add as AddIcon, Delete, Edit, PeopleAltOutlined as PeopleAltOutlinedIcon, Search } from \"@material-ui/icons\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { Grid, InputAdornment, makeStyles, Paper, TableBody, TableCell, TableRow, Toolbar } from \"@material-ui/core\";\nimport useTable from \"../../components/controlsHandlers/useTable\";\nimport { addEmployee, deleteEmployee, getAllEmployees, updateEmployee } from \"../../services/employeeService\";\nimport { MyControls } from \"../../components/controls/MyControls\";\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(2),\n  },\n  searchInput: {\n    width: \"100%\",\n  },\n}));\n\nconst HeadCells = [\n  { id: \"id\", label: \"EmployeeId\" },\n  { id: \"fullName\", label: \"Full Name\" },\n  { id: \"email\", label: \"Email\" },\n  { id: \"mobile\", label: \"Mobile\" },\n  { id: \"department\", label: \"Department\" },\n  { id: \"actions\", label: \"Actions\", disableSorting: true },\n];\n\nconst Employees = () => {\n  const classes = useStyles();\n  const [records, setRecords] = useState(getAllEmployees());\n  const [recordForEdit, setRecordForEdit] = useState({});\n  const [openPopup, setOpenPopup] = useState(false);\n  const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: \"\", subTitle: \"\" });\n  const [notify, setNotify] = useState({ isOpen: false, alertMessage: \"\", alertType: \"\" });\n\n  const [filterFunction, setFilterFunction] = useState({ fn: (items) => items });\n\n  const { TableContainer, TableHead, TablePagination, recordsAfterPagingAndSorting } = useTable(records, HeadCells, filterFunction);\n\n  const handleSearch = (event) => {\n    let target = event.target;\n    setFilterFunction({\n      fn: (items) => {\n        if (target.value == \"\") {\n          return items;\n        } else {\n          debugger;\n          return items.filter((x) => x.fullName.toString().toLowerCase().includes(target.value.toLowerCase()));\n        }\n      },\n    });\n  };\n\n  const addOrEditEmployees = (employeeValues, resetForm, isUpdate = false) => {\n    if (isUpdate) {\n      updateEmployee(employeeValues);\n      setRecordForEdit({});\n    } else {\n      addEmployee(employeeValues);\n    }\n    resetForm();\n  };\n\n  const handleOpenPopup = (e) => {\n    setOpenPopup(true);\n  };\n\n  const handleClosePopup = (e) => {\n    setOpenPopup(false);\n  };\n\n  const openInpopup = (record) => {\n    setRecordForEdit(record);\n    setOpenPopup(true);\n  };\n\n  const getRecordForEdit = () => {\n    return recordForEdit;\n  };\n\n  const handleDeleteRecord = (id) => {\n    setConfirmDialog({ ...confirmDialog, isOpen: false });\n    deleteEmployee(id);\n    setRecords(getAllEmployees());\n    setNotify({\n      isOpen: true,\n      alertMessage: \"Deleted succcessfully\",\n      alertType: \"error\",\n    });\n  };\n\n  return (\n    <div>\n      <PageHeader title=\"New Employee\" description=\"With Form Validation\" icon={<PeopleAltOutlinedIcon />} />\n\n      <Paper className={classes.pageContent}>\n        <Grid container>\n          <Grid item xs={12} md={10}>\n            <MyControls.Input\n              className={classes.searchInput}\n              label=\"search employee by name\"\n              onChange={handleSearch}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Search />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} md={2}>\n            <MyControls.Button text={\"Add New\"} size=\"medium\" variant=\"outlined\" startIcon={<AddIcon />} onClick={handleOpenPopup} />\n          </Grid>\n        </Grid>\n\n        <TableContainer>\n          <TableHead />\n          <TableBody>\n            {recordsAfterPagingAndSorting().map((record, index) => {\n              return (\n                <TableRow key={index}>\n                  <TableCell>{record.id}</TableCell>\n                  <TableCell>{record.fullName}</TableCell>\n                  <TableCell>{record.email}</TableCell>\n                  <TableCell>{record.mobile}</TableCell>\n                  <TableCell>{record.department}</TableCell>\n                  <TableCell>\n                    {\n                      <div>\n                        <MyControls.ActionIconButton color=\"secondary\" onClick={() => openInpopup(record)}>\n                          <Edit />\n                        </MyControls.ActionIconButton>\n                        <MyControls.ActionIconButton\n                          color=\"theme\"\n                          onClick={() => {\n                            setConfirmDialog({\n                              isOpen: true,\n                              title: \"Are you sure to Delete\",\n                              subTitle: `Delete record of employee \"${record.fullName}\"`,\n                              onConfirm: () => handleDeleteRecord(record.id),\n                            });\n                          }}\n                        >\n                          <Delete />\n                        </MyControls.ActionIconButton>\n                      </div>\n                    }\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </TableContainer>\n        <TablePagination />\n      </Paper>\n\n      <MyControls.PopupDialog\n        title=\"Add New Employee\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n        handleClosePopup={handleClosePopup}\n      >\n        <EmployeeForm\n          recordForEdit={getRecordForEdit()}\n          addOrEditEmployees={addOrEditEmployees}\n          handleClosePopup={handleClosePopup}\n          setRecords={() => setRecords(getAllEmployees())}\n          setNotify={setNotify}\n        />\n      </MyControls.PopupDialog>\n      <MyControls.Notification notify={notify} setNotify={setNotify} />\n      <MyControls.ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />\n    </div>\n  );\n};\n\nexport default Employees;\n","import { createMuiTheme, CssBaseline, makeStyles, ThemeProvider } from \"@material-ui/core\";\n\nimport React from \"react\";\nimport Header from \"../components/Header\";\nimport Sidemenu from \"../components/Sidemenu\";\nimport Employees from \"../pages/employee/Employees\";\nimport \"./App.css\";\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: \"#ff6200\",\n    },\n    theme: {\n      main: \"#00e68a\",\n      light: \"#1affd1\",\n    },\n    primary: {\n      light: \"#787878\",\n      main: \"#263294\",\n    },\n    background: {\n      default: \"#f2f2f2\",\n      light: \"#787878\",\n    },\n  },\n  shape: {\n    borderRadius: \"12px\",\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        transform: \"translateZ(0)\",\n      },\n    },\n  },\n  props: {\n    MuiIconButton: {\n      disableRipple: true,\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appMain: {\n    paddingLeft: \"10%\",\n    width: \"100%\",\n    backgroundColor: theme.palette.background.dark,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <Sidemenu />\n        <div className={classes.appMain}>\n          <Header></Header>\n          <Employees />\n        </div>\n        <CssBaseline></CssBaseline>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}